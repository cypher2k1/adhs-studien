<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Seite_1_12_2</title>
<link rel="stylesheet" type="text/css" href="../Format/Format.css">
<script type="text/javascript" src="../Go_Seite.js"></script>
<script src="../Bildwechsel.js"></script>
</head>
<body id="seite" onload="parent.parent.savePage()">
<table summary="Seiteninhalt" border="0" cellspacing="2" cellpadding="2" width="724">
  <tr>
    <td width="550"><p><b>Unterschiede zu C/C++</b></p></td>
    <td width="36"><img src="../Medien/Spacer.gif" width="36" height="1"></td>
    <td width="128"><img src="../Medien/Spacer.gif" width="128" height="1"></td>
  </tr>
  <tr>
    <td><p><b>C++ war der Ausgangspunkt f&uuml;r die Java-Entwicklung</b>, daher finden sich
        <b>viele Parallelen</b>. Sie beschr&auml;nken sich meist auf das &quot;<b>Aussehen</b>&quot;
        der Programme. Die <b>Bedeutungen der Elemente sind oft sehr verschieden</b>.</p></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><p>Der wohl gr&ouml;&szlig;te Unterschied ist die v&ouml;llig <b>andere Verarbeitung
        von Pointern</b> oder <b>&quot;Zeigern&quot; im Arbeitsspeicher des
        Computers</b>. So k&ouml;nnen Sie in <b>Java keine Pointer addieren</b>, &quot;umbiegen&quot; oder
        sonstwie modifizieren. <b>Das erkl&auml;rt auch, dass  ein Java-Programm nicht wegen eines Zugriffs auf
        einen undefinierten Pointer abst&uuml;rzen kann</b>.</p></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><p>Dar&uuml;ber hinaus kann ein Speicher, der durch ein Objekt oder String belegt ist, in <b>Java nicht
        explizit freigegeben werden</b>: Statt des Programmierers sorgt eine automatische
        <i>Garbage Collection</i> daf&uuml;r, dass nicht mehr benutzter Speicherplatz wieder verwendet wird und somit 
        die &quot;Sicherheit&quot; von Java-Programmen erh&ouml;ht.</p></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><p>Java ist <b>st&auml;rker objektorientiert</b> als C++. So gibt es <b>keine globalen
        Variablen</b> oder Funktionen mehr. Alle Deklarationen m&uuml;ssen in einer Klasse eingeschlossen
        sein, was zur Programmhomogenit&auml;t beitr&auml;gt.</p></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><p>Zudem werden <b>Java-Methoden immer innerhalb der Klasse definiert</b>, zu der sie
        geh&ouml;ren. Eine Prototyp-Definition einer Methode an einer Stelle eines Programms und eine
        sp&auml;tere Implementierung an einer anderen Stelle ist nicht m&ouml;glich. Daher gibt es in Java
        auch nicht den Unterschied zwischen Header- und Implementierungsdateien.</p></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><p>Java hat <b>keinen Pr&auml;prozessor</b> wie C++, d.h. es gibt auch
        <b>keine bedingte Kompilierung</b>, was den Programmcode etwas leserlicher macht.</p></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><b>Der vielleicht gr&ouml;&szlig;te Vorteil von Java ist die mitgelieferte plattform&uuml;bergreifende
        Klassenbibliothek</b>, die h&auml;ufig ben&ouml;tigte und innovative Konzepte wie Datenbankanbindung
        oder Netzwerkprogrammierung bereits mitliefert. Sie ist auf jedem Rechner verf&uuml;gbar, wenn Java installiert wurde.</td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>


</table>
</body>
</html>
